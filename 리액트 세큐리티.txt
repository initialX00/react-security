https://ko.react.dev/ 에서 리액트 보기


ㅇ상태관리 : 가상메모리를 사용하는 리액트에서 가상과 리얼메모리의 차이를 확인
useState(초기값) -> 숫자,문자열,객체,배열 등등
리턴 자료형 -> 배열 [ 현재 상태 값, setter 함수 ]
setValue(); 최적화,렌더링
setValue((pre) => pre + 30)


ㅇ컴포넌트 : 태그의 집합(함수), 대문자로 시작한다, props(객체{})를 받는다.
	비구조 할당을 통해 자동완성을 사용할 수 있다.


ㅇ랜더링 :
 최초의 실행 시 랜더링이 된다. - 마운트
 	(랜더링 - babel - 버전 호환성 조정, jsx을 html 변환)
 상태변화 시 렌더링이된다.
 자식관점에선 부모가 랜더링 시 랜더링된다

 지역상태: useState
 전역상태: Recoil,React-Query등등
	Recoil: 클라이언트 전역상태관리
	React-Query: 서버 전역상태관리
		     (리덕스의 요청,리피트,캐싱, 마운트, 언마운트(useEffect)등의 사용자설정을 표준화),
		     캐싱을 통해 트래픽 감소
		     useQuery([키], 요청 메서드, 옵션) - 요청메서드에서 저장된 값이 캐싱



ㅇ메모이제이션
 상태는 기억하지만 함수는 기억하지 못하므로
 useMemo(( ) => 함수, [상태])를 통해 저장하게 할 수 있다.
 상태가 변화하지 않을 경우 함수를 다시 계산하지 않고 넘어가며, 상태 변화 시 계산을 한다.






